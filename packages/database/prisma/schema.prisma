generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Authentication {
  id          Int     @id @default(autoincrement())
  provider     String
  providerId   String
  userId       Int
  user         User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
}

model User {
  id               Int               @id @default(autoincrement())
  firstName        String?           // ← optional
  lastName         String?           // ← optional
  email            String? @unique   // ← optional
  isInstructor     Boolean           @default(false)
  isAdmin          Boolean           @default(false)
  enrollments      Enrollment[]
  grades           Grades[]
  authentications  Authentication[]
}


model Enrollment {
  userId     Int
  courseId   Int
  finalGrade String
  course     Course @relation(fields: [courseId], references: [id])
  user       User   @relation(fields: [userId], references: [id])

  @@id([userId, courseId])
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String
  assignments Assignment[]
  enrollments Enrollment[]
}

model Assignment {
  id       Int      @unique
  courseId Int
  name     String
  course   Course   @relation(fields: [courseId], references: [id])
  Grades   Grades[]

  @@id([id, courseId])
}

model Grades {
  userId       Int
  assignmentId Int
  late         Boolean
  published    Boolean
  grade        String
  score        Float
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@unique([assignmentId, userId])
}
